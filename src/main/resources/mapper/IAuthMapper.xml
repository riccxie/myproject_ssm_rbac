<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qf.dao.IAuthDao" >
    
    <resultMap id="BaseResultMap" type="role">
        <id column="id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="role_desc" property="roleDesc"/>
    </resultMap>

    <resultMap id="User_BaseResultMap" type="com.qf.entity.User" >
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR" />
        <result column="password" property="password" jdbcType="VARCHAR" />
        <result column="age" property="age" jdbcType="INTEGER" />
        <result column="sex" property="sex" jdbcType="INTEGER" />
        <result column="birthday" property="birthday" jdbcType="DATE" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="create_user" property="createUser" jdbcType="INTEGER" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="update_user" property="updateUser" jdbcType="INTEGER" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="flag" property="flag" jdbcType="INTEGER" />
        <result column="png" property="png" jdbcType="LONGVARCHAR" />
    </resultMap>


    <select id="getRoleList" resultMap="BaseResultMap">
        select * from t_role
    </select>

    <insert id="addUserRole">
        insert into t_role_user(rid,uid) values
        <foreach collection="userIds" item="uid" separator=",">
            (#{roleId},#{uid})
        </foreach>
    </insert>
    
    <select id="getRoleByUids" resultType="int">
      select count(1) from t_role_user where rid = #{roleId} and uid in
      <foreach collection="userIds" open="(" close=")" item="uid" separator=",">
          #{uid}
      </foreach>
    </select>

    <select id="getUserListByRoleId" resultMap="User_BaseResultMap">
        select u.* from t_role_user ru left join t_user u on(ru.uid = u.id) where ru.rid = #{roleId}
    </select>

    <select id="getPerListByRoleId" resultType="map">
            SELECT
                p.id ,
                p.per_name as name,
                p.per_pid as pId,
                rp.id as checked
            FROM
                t_permission p
            left join t_role_permission rp on(p.id = rp.pid and rp.rid = #{roleId})
            group by p.id
            ORDER BY p.per_pid
    </select>

    <insert id="addPerByRoleId">
        INSERT into t_role_permission(pid,rid) values
        <foreach collection="perIdsList" item="pid" separator=",">
            (#{pid},#{roleId})
        </foreach>
    </insert>

    <delete id="deleteRolePer">

        delete from t_role_permission where rid = #{roleId}

</delete>

</mapper>